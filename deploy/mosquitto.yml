apiVersion: v1
kind: Template
metadata:
  name: cloud-connector
objects:


- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: cloud-connector
      pod: mosquitto-broker
    name: mosquitto-broker
  spec:
    replicas: 1
    selector:
      matchLabels:
          app: cloud-connector
          pod: mosquitto-broker
    revisionHistoryLimit: 10
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cloud-connector
          pod: mosquitto-broker
      spec:
        containers:
          - image: >-
              quay.io/cloudservices/eclipse-mosquitto:latest
            imagePullPolicy: Always
            name: mosquitto-broker
            ports:
              - containerPort: 1883
                protocol: TCP
            resources:
              limits:
                cpu: ${MQTT_BROKER_CPU_LIMIT}
                memory: ${MQTT_BROKER_MEMORY_LIMIT}
              requests:
                cpu: ${MQTT_BROKER_CPU_REQUEST}
                memory: ${MQTT_BROKER_MEMORY_REQUEST}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /mosquitto/config
                name: mosquitto-broker-volume-1
        volumes:
          - configMap:
              defaultMode: 420
              items:
                - key: mosquitto.conf
                  path: mosquitto.conf
              name: mosquitto-config
            name: mosquitto-broker-volume-1
        dnsPolicy: ClusterFirst
        imagePullSecrets:
          - name: quay-cloudservices-pull
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30


- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: mosquitto-config
    labels:
      app: cloud-connector
  data:
    mosquitto.conf: |-
      port 1883
      allow_anonymous true
      ## PATH to ca file
      #cafile /mosquitto/config/certs/ca.pem
      ## PATH to server certificate
      #certfile /mosquitto/config/certs/server_cert.pem
      ## PATH to encoded keyfile
      #keyfile /mosquitto/config/certs/server_key.pem
      ## Certificates required
      #require_certificate true
      ## If Certs are required you can use certs as username
      #use_identity_as_username true
      ## Do not allow anonymous clients
      #allow_anonymous false
      ## Declare acl_file
      #acl_file /mosquitto/config/mosquitto.acl
    mosquitto.acl: |-
      user connector-service
      topic readwrite redhat/insights/#

      # This works
      #pattern readwrite redhat/insights/%c/#

      # This is a bit more strict
      pattern read redhat/insights/%c/out
      pattern write redhat/insights/%c/in


- apiVersion: v1
  kind: Service
  metadata:
    name: mosquitto
    labels:
      app: cloud-connector
    annotations:
  spec:
    ports:
    - name: port-1883
      port: 1883
      protocol: TCP
      targetPort: 1883
    selector:
      app: cloud-connector
      pod: mosquitto-broker
    sessionAffinity: None
    type: ClusterIP


parameters:
- description: Initial amount of memory the mosquito-broker will request.
  displayName: Memory Request
  name: MQTT_BROKER_MEMORY_REQUEST
  value: 512Mi
- description: Maximum amount of memory the mosquito-broker can use.
  displayName: Memory Limit
  name: MQTT_BROKER_MEMORY_LIMIT
  value: 1Gi
- description: Initial amount of cpu the mosquito-broker will request.
  displayName: CPU Request
  name: MQTT_BROKER_CPU_REQUEST
  value: 500m
- description: Maximum amount of cpu the mosquito-broker can use.
  displayName: CPU Limit
  name: MQTT_BROKER_CPU_LIMIT
  value: '1'
